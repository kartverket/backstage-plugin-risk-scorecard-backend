name: Tenable
on:
  push:
    paths-ignore:
      - docker-compose.yaml
      - README**
    branches:
      - tenable

env:
  IMAGE_NAME: ${{ github.repository }}
  PROJECT_ID: 'spire-ros-5lmr'
  AR_REPO_LOCATION: 'europe-north1'
  AR_URL: 'europe-north1-docker.pkg.dev/spire-ros-5lmr/risc-plugin'
  SERVICE_ACCOUNT: 'risc-plugin-github-actions@spire-ros-5lmr.iam.gserviceaccount.com'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/457384642040/locations/global/workloadIdentityPools/github-actions-pool/providers/github'


defaults:
  run:
    shell: bash

jobs:
  push_to_ar:
    name: 'Docker build and push to GCP'
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker ${{ env.AR_REPO_LOCATION }}-docker.pkg.dev --quiet

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Create Docker network
        run: docker network create scan-net || true

      - name: Build the Docker image
        run: |
          docker build -t "${{ env.AR_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" .

      - name: Run the Docker image
        run: |
          docker run -d --name scan-app \
            --network scan-net \
            -p 8080:8080 \
            -p 8081:8081 \
            ${{ env.AR_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Wait for app to become healthy
        run: |
          for i in {1..10}; do
            echo "Checking health ($i/10)..."
            if curl -fsS http://localhost:8081/actuator/health; then
              echo "App is healthy!"
              exit 0
            fi
            sleep 5
          done
          echo "App failed to become healthy"
          docker logs scan-app
          exit 1

      - name: Pull and run tenable WAS
        run: |
          docker pull tenable/was-scanner:latest
          docker run \
          -v $(pwd)/.security:/scanner \
          -t \
          --network scan-net \
          -e WAS_MODE=cicd \
          -e ACCESS_KEY=${ACCESS_KEY} \
          -e SECRET_KEY=${SECRET_KEY} \
          tenable/was-scanner:latest | tee scan-output.log

          if grep -q "vulnerability threshold met, test failed!" scan-output.log; then
            echo "SCAN_FAILED=true" >> $GITHUB_ENV
          else
            echo "SCAN_FAILED=false" >> $GITHUB_ENV
          fi
        env:
          ACCESS_KEY: ${{ secrets.TENABLE_ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.TENABLE_SECRET_KEY }}

      - name: Upload Scan Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: scan-vulnerability-output
          path: .security/tenable_was_scan.html

      - name: Upload Scan Log Troubleshooting Artifact
        uses: actions/upload-artifact@v4
        with:
          name: scan-troubleshooting-logs
          path: |
            .security/scanner.log
            .security/tenable_was.conf
